## Process this file with automake to produce GNUmakefile.in


#The following flag solves the boost::thread compiler issue, but it breaks boost::filesystem
#-DBOOST_NO_SFINAE
#Instead, use the more specific BOOST_THREAD_NO_AUTO_DETECT_MUTEX_TYPES (which fixes boost/lock.hpp errors)

AM_CPPFLAGS    = \
	-DBOOST_THREAD_NO_AUTO_DETECT_MUTEX_TYPES \
	-pthread \
	-Wall \
	-std=c++11 \
	-fPIC \
	-fpermissive \
	-I$(top_srcdir)/include \
	$(ORB_CXXFLAGS)
	


AM_LDFLAGS     = $(ORB_LDFLAGS) -L.
#AM_LDFLAGS     = -L. 

#LDADD          = $(ORB_LIBS) -lboost_thread -lxerces-c -lboost_filesystem -lboost_system
LDADD          =

#STI_LIBS       = $(ORB_LIBS) -lboost_thread -lxerces-c -lboost_filesystem -lboost_system
STI_LIBS       =  $(ORB_LIBS) -lboost_thread -lboost_filesystem -lboost_system -lxerces-c
#STI_LIBS       =  $(ORB_LIBS)


noinst_LIBRARIES = libcorba.a
#noinst_LTLIBRARIES = libcorba.la


#STI_LIBS_DIR = /home/lab/etraxfs/projects/timing-test/local/crisv32-axis-linux-gnu/usr/lib

#devicelibdir = ../lib/
#devicelib_LIBRARIES = libcorba.a

IDL_STUB_CLNT = _clnt
IDL_STUB_SRV = 
IDL_EXT_C = cpp
IDL_EXT_H = h

DEVICE_INCLUDE_DIR = ../include/

libcorba_a_idl_sources = \
    $(top_srcdir)/../idl/orbTypes.idl \
    $(top_srcdir)/../idl/device.idl \
    $(top_srcdir)/../idl/pusher.idl
libcorba_a_idl_generated_sources = \
    orbTypes.cpp \
    orbTypes.h \
    device.cpp \
    device.h \
    pusher.cpp \
    pusher.h
libcorba_a_non_idl_sources = \
    Attribute.cpp \
    $(DEVICE_INCLUDE_DIR)Attribute.h \
    Clock.cpp \
    $(DEVICE_INCLUDE_DIR)Clock.h \
    CommandLine_i.cpp \
    $(DEVICE_INCLUDE_DIR)CommandLine_i.h \
    ConfigFile.cpp \
    $(DEVICE_INCLUDE_DIR)ConfigFile.h \
    COSBindingNode.cpp \
    $(DEVICE_INCLUDE_DIR)COSBindingNode.h \
    $(DEVICE_INCLUDE_DIR)DeviceEvent.h \
    DeviceEventPusher.cpp \
    $(DEVICE_INCLUDE_DIR)DeviceEventPusher.h \
    DataLogger_i.cpp \
    $(DEVICE_INCLUDE_DIR)DataLogger_i.h \
    DataMeasurement.cpp \
    $(DEVICE_INCLUDE_DIR)DataMeasurement.h \
    DataTransfer_i.cpp \
    $(DEVICE_INCLUDE_DIR)DataTransfer_i.h \
    DeviceBootstrap_i.cpp \
    $(DEVICE_INCLUDE_DIR)DeviceBootstrap_i.h \
    DeviceConfigure_i.cpp \
    $(DEVICE_INCLUDE_DIR)DeviceConfigure_i.h \
    DeviceTimingSeqControl_i.cpp \
    $(DEVICE_INCLUDE_DIR)DeviceTimingSeqControl_i.h \
    DOMNodeWrapper.cpp \
    $(DEVICE_INCLUDE_DIR)DOMNodeWrapper.h \
    DOMPrintErrorHandler.cpp \
    $(DEVICE_INCLUDE_DIR)DOMPrintErrorHandler.hpp \
    DOMTreeErrorReporter.cpp \
    $(DEVICE_INCLUDE_DIR)DOMTreeErrorReporter.hpp \
    DynamicValue.cpp \
    $(DEVICE_INCLUDE_DIR)DynamicValue.h \
    DynamicValueLink_i.cpp \
    $(DEVICE_INCLUDE_DIR)DynamicValueLink_i.h \
    EventConflictException.cpp \
    $(DEVICE_INCLUDE_DIR)EventConflictException.h \
    EventParsingException.cpp \
    $(DEVICE_INCLUDE_DIR)EventParsingException.h \
    LoggedMeasurement.cpp \
    $(DEVICE_INCLUDE_DIR)LoggedMeasurement.h \
    $(DEVICE_INCLUDE_DIR)MeasurementCallback.h \
    MixedData.cpp \
    $(DEVICE_INCLUDE_DIR)MixedData.h \
    MixedValue.cpp \
    $(DEVICE_INCLUDE_DIR)MixedValue.h \
    NetworkFileSource.cpp \
    $(DEVICE_INCLUDE_DIR)NetworkFileSource.h \
    ORBManager.cpp \
    $(DEVICE_INCLUDE_DIR)ORBManager.h \
    PartnerDevice.cpp \
    $(DEVICE_INCLUDE_DIR)PartnerDevice.h \
    RawEvent.cpp \
    $(DEVICE_INCLUDE_DIR)RawEvent.h \
    STI_Application.cpp \
    $(DEVICE_INCLUDE_DIR)STI_Application.h \
    STI_Device.cpp \
    $(DEVICE_INCLUDE_DIR)STI_Device.h \
    $(DEVICE_INCLUDE_DIR)TMeasurementCallback_i.h \
    TNetworkFile_i.cpp \
    $(DEVICE_INCLUDE_DIR)TNetworkFile_i.h \
    TNetworkFileReader.cpp \
    $(DEVICE_INCLUDE_DIR)TNetworkFileReader.h \
    $(DEVICE_INCLUDE_DIR)types.h \
    utils.cpp \
    $(DEVICE_INCLUDE_DIR)utils.h \
    XmlManager.cpp \
    $(DEVICE_INCLUDE_DIR)XmlManager.h \
    xstring.cpp \
    $(DEVICE_INCLUDE_DIR)xstring.h

libcorba_a_non_idl_objects = \
    Attribute.$(OBJEXT) \
    Clock.$(OBJEXT) \
    CommandLine_i.$(OBJEXT) \
    ConfigFile.$(OBJEXT) \
    COSBindingNode.$(OBJEXT) \
    DataLogger_i.$(OBJEXT) \
    DataMeasurement.$(OBJEXT) \
    DataTransfer_i.$(OBJEXT) \
    DeviceConfigure_i.$(OBJEXT) \
    DeviceTimingSeqControl_i.$(OBJEXT) \
    DOMNodeWrapper.$(OBJEXT) \
    DOMPrintErrorHandler.$(OBJEXT) \
    DOMTreeErrorReporter.$(OBJEXT) \
    DynamicValue.$(OBJEXT) \
    DynamicValueLink_i.$(OBJEXT) \
    EventConflictException.$(OBJEXT) \
    EventParsingException.$(OBJEXT) \
    LoggedMeasurement.$(OBJEXT) \
    MixedData.$(OBJEXT) \
    MixedValue.$(OBJEXT) \
    NetworkFileSource.$(OBJEXT) \
    ORBManager.$(OBJEXT) \
    PartnerDevice.$(OBJEXT) \
    RawEvent.$(OBJEXT) \
    STI_Device.$(OBJEXT) \
    TNetworkFile_i.$(OBJEXT) \
    utils.$(OBJEXT) \
    XmlManager.$(OBJEXT) \
    xstring.$(OBJEXT)


libcorba_so_non_idl_headers = \
    $(DEVICE_INCLUDE_DIR)Attribute.h \
    $(DEVICE_INCLUDE_DIR)Clock.h \
    $(DEVICE_INCLUDE_DIR)CommandLine_i.h \
    $(DEVICE_INCLUDE_DIR)ConfigFile.h \
    $(DEVICE_INCLUDE_DIR)COSBindingNode.h \
    $(DEVICE_INCLUDE_DIR)DataLogger_i.h \
    $(DEVICE_INCLUDE_DIR)DataMeasurement.h \
    $(DEVICE_INCLUDE_DIR)DataTransfer_i.h \
    $(DEVICE_INCLUDE_DIR)DeviceBootstrap_i.h \
    $(DEVICE_INCLUDE_DIR)DeviceConfigure_i.h \
    $(DEVICE_INCLUDE_DIR)DeviceTimingSeqControl_i.h \
    $(DEVICE_INCLUDE_DIR)DOMNodeWrapper.h \
    $(DEVICE_INCLUDE_DIR)DOMPrintErrorHandler.hpp \
    $(DEVICE_INCLUDE_DIR)DOMTreeErrorReporter.hpp \
    $(DEVICE_INCLUDE_DIR)EventConflictException.h \
    $(DEVICE_INCLUDE_DIR)EventParsingException.h \
    $(DEVICE_INCLUDE_DIR)LoggedMeasurement.h \
    $(DEVICE_INCLUDE_DIR)MixedData.h \
    $(DEVICE_INCLUDE_DIR)MixedValue.h \
    $(DEVICE_INCLUDE_DIR)NetworkFileSource.h \
    $(DEVICE_INCLUDE_DIR)ORBManager.h \
    $(DEVICE_INCLUDE_DIR)PartnerDevice.h \
    $(DEVICE_INCLUDE_DIR)RawEvent.h \
    $(DEVICE_INCLUDE_DIR)STI_Application.h \
    $(DEVICE_INCLUDE_DIR)STI_Device.h \
    $(DEVICE_INCLUDE_DIR)TNetworkFile_i.h \
    $(DEVICE_INCLUDE_DIR)TNetworkFileReader.h \
    $(DEVICE_INCLUDE_DIR)types.h \
    $(DEVICE_INCLUDE_DIR)utils.h \
    $(DEVICE_INCLUDE_DIR)XmlManager.h \
    $(DEVICE_INCLUDE_DIR)xstring.h



$(libcorba_a_idl_generated_sources): $(libcorba_a_idl_sources)


#For static linking:
libcorba_a_SOURCES = $(libcorba_a_idl_sources) $(libcorba_a_non_idl_sources)
nodist_libcorba_a_SOURCES = $(libcorba_a_idl_generated_sources)

#For dynamic linking
#libcorba_la_SOURCES = $(libcorba_a_idl_sources) $(libcorba_a_non_idl_sources)
#library_includedir=$(includedir)/libcorba
#library_include_HEADERS = libcorba_so_non_idl_headers

#$(libcorba_a_non_idl_objects): $(libcorba_a_idl_generated_sources) $(libcorba_a_idl_sources)
$(libcorba_a_non_idl_objects): $(libcorba_a_idl_generated_sources)

CLEANFILES = $(libcorba_a_idl_generated_sources)



noinst_PROGRAMS = testDevice
testDevice_SOURCES = \
    deviceserver.cpp \
    testDevice.cpp \
    $(DEVICE_INCLUDE_DIR)testDevice.h

testDevice_LDADD = \
    libcorba.a \
    $(STI_LIBS)
testDevice_LDFLAGS = -pthread

